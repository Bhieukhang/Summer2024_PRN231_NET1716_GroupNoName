@page
@model JewelrySalesSystem_NoName_FE.Pages.Manager.Products.AddSubProductModel

<div class="container my-5">
    <div class="card-header bg-primary text-white">
        <h2 class="mb-0">Tra Cứu Sản Phẩm</h2>
    </div>
    <div class="mt-3">
        <form method="get" id="searchForm" onsubmit="searchProductByCode(); return false;">
            <div class="input-group">
                <input type="text" id="searchCode" name="searchCode" class="form-control" placeholder="Nhập mã code của trang sức cần tìm" autocomplete="off"
                       onkeyup="autocompleteSearch(this.value)" />
                <div id="autocomplete-list" class="autocomplete-items"></div>
            </div>
        </form>
    </div>
    <br />
    <br />
      <br />
        <br />
    <br />      <br />
    <br />
    <br />      <br />
    <br />
    <br />

      <br />

    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0">Thêm Trang Sức Mới</h2>
                </div>
                <div class="card-body">
                    <form class="forms-sample" method="post" enctype="multipart/form-data">
                        <!-- Tên sản phẩm -->
                        <div class="mb-3">
                            <label asp-for="Product.ProductName" class="form-label">Tên</label>
                            <input asp-for="Product.ProductName" id="productName" class="form-control" placeholder="Nhập tên trang sức" />
                            <span asp-validation-for="Product.ProductName" class="text-danger"></span>
                        </div>
                        <!-- Mã sản phẩm -->
                        <div class="mb-3">
                            <label asp-for="Product.Code" class="form-label">Mã sản phẩm</label>
                            <input asp-for="Product.Code" class="form-control" placeholder="Theo mẫu (XXXX0000)" />
                            <span asp-validation-for="Product.Code" class="text-danger"></span>
                        </div>
                        <!-- Chất liệu -->
                        <div class="mb-3">
                            <label asp-for="Product.MaterialId" class="form-label">Chất Liệu</label>
                            <select asp-for="Product.MaterialId" class="form-select" asp-items="@(new SelectList(Model.MaterialList, "Id", "MaterialName"))">
                                <option value="">Select Material</option>
                            </select>
                            <span asp-validation-for="Product.MaterialId" class="text-danger"></span>
                        </div>
                        <!-- Mô tả sản phẩm -->
                        <div class="mb-3">
                            <label asp-for="Product.Description" class="form-label">Mô Tả</label>
                            <textarea asp-for="Product.Description" class="form-control" placeholder="Nhập mô tả, thông tin trang sức"></textarea>
                            <span asp-validation-for="Product.Description" class="text-danger"></span>
                        </div>
                        <!-- Hình ảnh sản phẩm -->
                        <div class="mb-3">
                            <label asp-for="Image" class="form-label">Hình Ảnh Trang Sức</label>
                            <input type="file" asp-for="Image" class="form-control" />
                            <span asp-validation-for="Image" class="text-danger"></span>
                        </div>
                        <!-- Giá nhập vào -->
                        <div class="mb-3">
                            <label asp-for="Product.ImportPrice" class="form-label">Giá Nhập Vào</label>
                            <input asp-for="Product.ImportPrice" class="form-control" placeholder="Nhập giá nhập vào" />
                            <span asp-validation-for="Product.ImportPrice" class="text-danger"></span>
                        </div>
                        <!-- Kích thước sản phẩm -->
                        <div class="mb-3">
                            <label asp-for="Product.Size" class="form-label">Kích Thước (mm)</label>
                            <input asp-for="Product.Size" class="form-control" placeholder="Nhập kích thước trang sức (cm)" />
                            <span asp-validation-for="Product.Size" class="text-danger"></span>
                        </div>
                        <!-- Thuế -->
                        <div class="mb-3">
                            <label asp-for="Product.Tax" class="form-label">Thuế</label>
                            <input asp-for="Product.Tax" class="form-control" placeholder="Thuế mặc định bằng 10% giá nhập vào" readonly />
                        </div>
                        <!-- Giá gia công -->
                        <div class="mb-3">
                            <label asp-for="Product.ProcessPrice" class="form-label">Giá Gia Công</label>
                            <input asp-for="Product.ProcessPrice" class="form-control" placeholder="Nhập Giá Gia Công (Nếu Có)" />
                        </div>
                        <!-- Giá bán -->
                        <div class="mb-3">
                            <label asp-for="Product.SellingPrice" class="form-label">Giá Bán</label>
                            <input asp-for="Product.SellingPrice" class="form-control" placeholder="Nhập Giá Bán (Giá Bán = Giá nhập + Giá gia công + Thuế)" readonly />
                        </div>
                        <!-- Số lượng sản phẩm -->
                        <div class="mb-3">
                            <label asp-for="Product.Quantity" class="form-label">Số Lượng</label>
                            <input asp-for="Product.Quantity" class="form-control" />
                            <span asp-validation-for="Product.Quantity" class="text-danger"></span>
                        </div>
                        <!-- Loại sản phẩm -->
                        <div class="mb-3">
                            <label asp-for="Product.CategoryId" class="form-label">Loại</label>
                            <select asp-for="Product.CategoryId" class="form-select" asp-items="@(new SelectList(Model.CategoryList, "Id", "Name"))">
                                <option value="">Select Category</option>
                            </select>
                            <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                        </div>
                        <!-- Thời lượng bảo hành -->
                        <div class="mb-3">
                            <label asp-for="Product.PeriodWarranty" class="form-label">Thời Lượng Bảo Hành (Tháng)</label>
                            <input asp-for="Product.PeriodWarranty" class="form-control" placeholder="Nhập Thời Gian Bảo Hành" />
                            <span asp-validation-for="Product.PeriodWarranty" class="text-danger"></span>
                        </div>
                        <!-- Nút thêm và hủy -->
                        <div class="d-flex justify-content-end">
                            <button type="submit" class="btn btn-gradient-primary me-2">Thêm</button>
                            <a asp-page="./ListSubProduct" class="btn btn-gradient-light btn-fw">Hủy</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css" />
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>

    <script>
        function autocompleteSearch(query) {
            console.log(query);
            if (query.length == 0) {
                document.getElementById("autocomplete-list").innerHTML = "";
                return;
            }

            fetch(`https://localhost:44318/api/v1/Product/autocomplete?query=${query}`)
                .then(response => response.json())
                .then(data => {
                    console.log("Data: ", data);
                    let autocompleteList = document.getElementById("autocomplete-list");
                    autocompleteList.innerHTML = "";

                    data['$values'].forEach(item => {
                        console.log("Item", item);
                        let suggestionItem = document.createElement("div");
                        suggestionItem.classList.add("autocomplete-item");

                        suggestionItem.innerHTML = `
            <div class="autocomplete-item-content">
                <img class="product-image-search" src="${item.imgProduct}" alt="Product image">
                <div class="product-details-search">
                    <h5 class="product-name-search">${item.productName}</h5>
                    <p class="product-code-search">Code: <strong>${item.code}</strong></p>

                                                   <p class="product-code-search">Mô Tả: <strong>${item.description}</strong></p>
                                                              <p class="product-code-search">Giá Nhập: <strong>${item.importPrice}</strong></p>
                                                              <p class="product-code-search">Kích Thước: <strong>${item.size}</strong></p>
                                                                                        <p class="product-code-search">Giá Gia Công: <strong>${item.processPrice}</strong></p>
                                                                                  <p class="product-code-search">Số Lượng: <strong>${item.quantity}</strong></p>
                                                                                    <p class="product-code-search">Bảo Hành: <strong>${item.periodWarranty}</strong></p>
                                                                       
                                                                                


                </div>
            </div>
        `;

                        suggestionItem.onclick = function () {
                            document.getElementById("searchCode").value = item.code;
                            document.getElementById("searchCode").value = item.productName;
                            document.getElementById("autocomplete-list").innerHTML = "";
                            document.getElementById("selectedProductId").value = item.id;
                            autocompleteList.innerHTML = "";
                        };

                        autocompleteList.appendChild(suggestionItem);
                    });
                })
                .catch(error => console.error('Error fetching autocomplete data:', error));
        }

        function searchProductByCode() {
            const searchCode = document.getElementById("searchCode").value;
            const selectedProductId = document.getElementById("selectedProductId").value;
            console.log("Selected Product ID", selectedProductId);
            if (selectedProductId) {
                // Handle the product search with the selected product ID
                // E.g., submit the form or make an API request to get the product details
            }
            if (searchCode) {
                fetch(`https://localhost:44318/api/v1/Product/code?code=${searchCode}`)
                    .then(response => {
                        if (!response.ok) {
                            // Nếu không tìm thấy sản phẩm, trả về null
                            return null;
                        }
                        return response.json();
                    })
                    .then(data => {
                        updateUI(data);
                    })
                    .catch(error => console.error('Error fetching product data:', error));
            }
        }

        function updateUI(data) {
            const resultContainer = document.getElementById("resultContainer");
            const productListContainer = document.getElementById("productList");
            const paginationContainer = document.getElementById("pagination");
            const uiContainer = document.getElementById("ui");
            const uiProductContainer = document.getElementById("uiProduct");
            if (productListContainer) {
                productListContainer.style.display = 'none';
            }

            if (paginationContainer) {
                paginationContainer.style.display = 'none';
            }
            if (uiContainer) {
                uiContainer.style.display = 'none';
            }
            if (uiProductContainer) {
                uiProductContainer.style.display = 'none';
            }

            resultContainer.innerHTML = '';

            if (data) {
                const productInfo = `
                                    <div class="col-md-3 d-flex align-items-stretch">
                                        <div class="card product-card">
                                            <img class="card-img-top product-image" src="${data.imgProduct}" alt="Card image cap">
                                            <div class="card-body d-flex flex-column">
                                                <h5 class="card-title">${data.productName}</h5>
                                                <p class="card-text">Code : <strong>${data.code}</strong></p>
                                                <p class="card-text">Loại : <strong>${data.category?.name}</strong></p>
                                                <p class="card-text">Số Lượng : <strong>${data.quantity}</strong></p>
                                                <p class="card-text">Giá Bán : <strong>${data.sellingPrice}</strong></p>
                                                <div class="mt-auto d-flex justify-content-between">
                                                    <a href="/Manager/Products/EditProduct?id=${data.id}" class="btn btn-outline-secondary btn-fw me-2">Cập Nhật</a>
                                                    <a data-bs-toggle="modal" data-bs-target="#productModal-${data.id}" class="btn btn-outline-danger btn-fw">
                                                        <i class="fa fa-eye menu-icon"></i>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                `;
                resultContainer.innerHTML = productInfo;
            } else {
                alert('Không tìm thấy sản phẩm.');
        @*resultContainer.innerHTML = '<p>No product found.</p>';*@
                            }
        }


        function getQueryParams() {
            const params = {};
            const queryString = window.location.search.substring(1);
            const regex = /([^&=]+)=([^&]*)/g;
            let m;
            while ((m = regex.exec(queryString))) {
                params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);
            }
            return params;
        }

        function updateQueryString(params) {
            const query = Object.keys(params)
                .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)
                .join('&');
            history.pushState(null, null, `?${query}`);
        }

        function changePage(page) {
            const params = getQueryParams();
            const currentPage = parseInt(params.page) || 1;
            if (page === 'prev') {
                if (currentPage > 1) {
                    params.page = currentPage - 1;
                }
            } else if (page === 'next') {
                params.page = currentPage + 1;
            } else {
                params.page = page;
            }
            updateQueryString(params);
            filterProducts();
        }

        function generatePagination(totalPages, currentPage) {
            const pagination = document.getElementById("pagination");
            pagination.innerHTML = `
                                                    <li class="page-item ${currentPage == 1 ? 'disabled' : ''}">
                                                        <a class="page-link" href="javascript:void(0);" onclick="changePage('prev')" tabindex="-1">Trước</a>
                                                    </li>
                                                `;

            for (let i = 1; i <= totalPages; i++) {
                pagination.innerHTML += `
                                                        <li class="page-item ${currentPage == i ? 'active' : ''}">
                                                            <a class="page-link" href="javascript:void(0);" onclick="changePage(${i})">${i}</a>
                                                        </li>
                                                    `;
            }

            pagination.innerHTML += `
                                                    <li class="page-item ${currentPage == totalPages ? 'disabled' : ''}">
                                                        <a class="page-link" href="javascript:void(0);" onclick="changePage('next')">Sau</a>
                                                    </li>
                                                `;
        }

        function filterProducts() {
            const params = getQueryParams();
            const categoryId = params.categoryId || document.getElementById("category").value;
            const materialId = params.materialId || document.getElementById("material").value;
            const page = params.page || 1;

            fetch(`https://localhost:44318/api/v1/Product/filter?categoryId=${categoryId}&materialId=${materialId}&page=${page}&size=12`)
                .then(response => response.json())
                .then(data => {
                    const productList = document.getElementById("productList");
                    productList.innerHTML = "";

                    if (!data.items || !Array.isArray(data.items.$values)) {
                        console.error('Expected data.items.$values to be an array, but got:', data.items);
                        return;
                    }

                    data.items.$values.forEach(item => {
                        productList.innerHTML += `
                                                                <div class="col-md-3 d-flex align-items-stretch">
                                                                    <div class="card product-card">
                                                                        <img class="card-img-top product-image" src="${item.imgProduct}" alt="Card image cap">
                                                                        <div class="card-body d-flex flex-column">
                                                                            <h5 class="card-title">${item.productName}</h5>
                                                                            <p class="card-text">Code : <strong>${item.code}</strong></p>
                                                                            <p class="card-text">Loại : <strong>${item.category?.name}</strong></p>
                                                                            <p class="card-text">Số Lượng : <strong>${item.quantity}</strong></p>
                                                                            <p class="card-text">Giá Bán : <strong>${item.sellingPrice}</strong></p>
                                                                            <div class="mt-auto d-flex justify-content-between">
                                                                                <a href="/Manager/Products/EditProduct?id=${item.id}" class="btn btn-outline-secondary btn-fw me-2">Cập Nhật</a>
                                                                                <a data-bs-toggle="modal" data-bs-target="#productModal-${item.id}" class="btn btn-outline-danger btn-fw">
                                                                                    <i class="fa fa-eye menu-icon"></i>
                                                                                </a>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="modal fade" id="productModal-${item.id}" tabindex="-1" aria-labelledby="productModalLabel-${item.id}" aria-hidden="true">
                                                                    <div class="modal-dialog modal-dialog-centered">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h5 class="modal-title" id="productModalLabel-${item.id}">Chi tiết trang sức</h5>
                                                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                                <div class="product-details">
                                                                                    <img src="${item.imgProduct}" alt="Product Image" class="product-image" />
                                                                                    <div class="product-info">
                                                                                        <h4>${item.productName}</h4>
                                                                                        <p><strong>Code :</strong> ${item.code}</p>
                                                                                        <p><strong>Chất liệu :</strong> ${item.material?.materialName}</p>
                                                                                        <p><strong>Mô tả :</strong> ${item.description}</p>
                                                                                        <p><strong>Kích thước :</strong> ${item.size}</p>
                                                                                        <p><strong>Số lượng :</strong> ${item.quantity}</p>
                                                                                        <p><strong>Giá Bán :</strong> ${item.sellingPrice}</p>
                                                                                        <p><strong>Loại :</strong> ${item.category?.name}</p>
                                                                                        <p><strong>Ngày nhập :</strong> ${item.insDate}</p>
                                                                                        <p><strong>Thời lượng bảo hành :</strong> ${item.periodWarranty} tháng</p>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            `;
                    });
                    $(productList).slick({
                        slidesToShow: 4, 
                        slidesToScroll: 1,
                        prevArrow: '<button type="button" class="slick-prev">Previous</button>',
                        nextArrow: '<button type="button" class="slick-next">Next</button>',
                        responsive: [
                            {
                                breakpoint: 992,
                                settings: {
                                    slidesToShow: 3
                                }
                            },
                            {
                                breakpoint: 768,
                                settings: {
                                    slidesToShow: 2
                                }
                            },
                            {
                                breakpoint: 576,
                                settings: {
                                    slidesToShow: 1
                                }
                            }
                        ]
                    });

                    generatePagination(data.totalPages, parseInt(page));
                })
                .catch(error => console.error('Error fetching filtered products:', error));
        }
        document.addEventListener('DOMContentLoaded', () => {
            filterProducts();
        });
    </script>
}


<style>
    .form-label {
        font-weight: bold;
    }

    .form-control, .form-select {
        border-radius: 0.375rem;
    }

    .btn-gradient-primary {
        background: linear-gradient(45deg, #6a11cb 0%, #2575fc 100%);
        border: none;
        color: white;
    }

    .btn-gradient-light {
        background: #f8f9fa;
        border: 1px solid #ced4da;
        color: #495057;
    }

    .shadow-sm {
        box-shadow: 0 .125rem .25rem rgba(0, 0, 0, 0.075) !important;
    }

    .autocomplete-item-content {
        display: flex;
        align-items: center;
        overflow-x: auto;
    }

    .product-image-search {
        max-width: 100px; 
        height: auto;
        margin-right: 10px; 
    }

    .product-details-search {
        flex: 1;
    }

    .product-name-search {
        margin-bottom: 5px;
    }

    .product-code-search {
        margin: 0;
    }

    .autocomplete-items {
        overflow-x: auto;
    }

    .page-title {
        font-size: 2.5rem;
    }

    .card {
        margin-bottom: 20px;
    }

    .product-card {
        display: flex;
        flex-direction: column;
    }

    .card-img-top {
        max-height: 200px;
        object-fit: cover;
    }

    .product-details {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .product-image {
        max-width: 300px;
        max-height: 300px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

    .product-info {
        width: 100%;
    }

        .product-info p {
            display: flex;
            justify-content: space-between;
            padding: 10px;
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin-bottom: 10px;
        }

            .product-info p strong {
                color: #495057;
            }

    .form-label {
        font-weight: bold;
        color: #495057;
    }

    .form-control {
        border-radius: 0.375rem;
    }

    .btn-gradient-secondary {
        background: linear-gradient(45deg, #6a11cb 0%, #2575fc 100%);
        border: none;
        color: white;
    }

    .bg-light {
        background-color: #f8f9fa !important;
    }

    .rounded {
        border-radius: 0.375rem !important;
    }

    .shadow-sm {
        box-shadow: 0 .125rem .25rem rgba(0, 0, 0, 0.075) !important;
    }

    .text-danger {
        font-size: 0.875rem;
    }

    .autocomplete {
        position: relative;
        display: inline-block;
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        top: 100%;
        left: 0;
        right: 0;
        background-color: #ffffff;
        max-height: 200px;
        overflow-y: auto;
        width: 100%;
    }

    .autocomplete-item {
        display: flex;
        align-items: center;
        padding: 10px;
        cursor: pointer;
        background-color: #fff;
        border-bottom: 1px solid #d4d4d4;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .autocomplete-item:hover {
            background-color: #e9e9e9;
        }

    .product-image-search {
        max-width: 50px;
        max-height: 50px;
        margin-right: 10px;
        border-radius: 5px;
        object-fit: cover;
    }

    .product-details -search
    display: flex;
    flex-direction: column;
    }

    .product-name-search {
        font-size: 1rem;
        margin: 0;
        font-weight: bold;
    }

    .product-code-search {
        font-size: 0.875rem;
        margin: 0;
        color: #495057;
    }
</style>