@page
@model JewelrySalesSystem_NoName_FE.Pages.Staff.StaticsStaff.StaffDashboardModel
@{
    int totalProductCount = Model.TotalProductCount;
    int totalOrderInDay = Model.TotalOrderInDay;
}
@Html.AntiForgeryToken()
<div class="main-panel">
    <div class="content-wrapper">
        <div class="page-header">
            <h3 class="page-title">
                <span class="page-title-icon bg-gradient-primary text-white me-2">
                    <i class="mdi mdi-home"></i>
                </span> Dashboard
            </h3>
            <nav aria-label="breadcrumb">
                <ul class="breadcrumb">
                    <li class="breadcrumb-item active" aria-current="page">
                        <span></span>Overview <i class="mdi mdi-alert-circle-outline icon-sm text-primary align-middle"></i>
                    </li>
                </ul>
            </nav>
        </div>
        <div class="row">
            <div class="col-md-4 stretch-card grid-margin">
                <div class="card bg-gradient-danger card-img-holder text-white">
                    <div class="card-body">
                        <img src="~/assets/images/dashboard/circle.png" class="card-img-absolute" alt="circle-image" />
                        <h4 class="font-weight-normal mb-3">
                            Tổng đơn hàng trong ngày <i class="mdi mdi-chart-line mdi-24px float-end"></i>
                            <h5 id="currentDate" class="text-white"></h5>
                        </h4>
                        <h2 id="totalOrderInDay" class="mb-5"></h2>
                    </div>
                </div>
            </div>
            <div class="col-md-4 stretch-card grid-margin">
                <div class="card bg-gradient-info card-img-holder text-white">
                    <div class="card-body">
                        <img src="~/assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                        <h4 class="font-weight-normal mb-3">
                            Tổng sản phẩm <i class="mdi mdi-bookmark-outline mdi-24px float-end"></i>
                        </h4>
                        <h2 id="totalProductCount" class="mb-5"></h2>
                    </div>
                </div>
            </div>
            <div class="col-md-4 stretch-card grid-margin">
                <div class="card bg-gradient-success card-img-holder text-white">
                    <div class="card-body">
                        <img src="~/assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                        <h4 class="font-weight-normal mb-3">
                            Loại <i class="mdi mdi-diamond mdi-24px float-end"></i>
                        </h4>
                        <h2 class="mb-5" id="totalCategory">Loading...</h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <input type="hidden" id="requestVerificationToken" value="">
            <div class="col-md-7 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="clearfix">
                            <h4 class="card-title float-start">Đơn hàng</h4>
                            <div id="visit-sale-chart-legend" class="rounded-legend legend-horizontal legend-top-right float-end"></div>
                        </div>
                        <div style="height: 400px;">
                            <canvas id="visit-sale-chart" class="mt-4"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-5 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Sản phẩm</h4>
                        <div class="doughnutjs-wrapper d-flex justify-content-center">
                            <canvas id="categoryPieChart"></canvas>
                        </div>
                        <div id="traffic-chart-legend" class="rounded-legend legend-vertical legend-bottom-left pt-4"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Get current date and format it as dd/MM/yyyy
            const today = new Date();
            const formattedDate = today.getDate().toString().padStart(2, '0') + '/' +
                (today.getMonth() + 1).toString().padStart(2, '0') + '/' +
                today.getFullYear();
            $('#currentDate').text(formattedDate);

            $.ajax({
                url: '@Url.Page("/Staff/StaticsStaff/StaffDashboard", new { handler = "Dashboard" })',
                type: 'GET',
                success: function (data) {
                    console.log("Dashboard Data: ", data);
                    $('#totalOrderInDay').text(data.totalOrderInDay);
                    $('#totalProductCount').text(data.totalProductCount);
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching data:', error);
                    alert('Có lỗi xảy ra khi tải dữ liệu.');
                }
            });

            $.ajax({
                url: '@Url.Page("/Staff/StaticsStaff/StaffDashboard", new { handler = "OrderDashboard" })',
                type: 'GET',
                success: function (data) {
                    console.log("Data: ", data);

                    const allMonths = Array.from({ length: 12 }, (v, i) => i + 1);
                    const labels = allMonths.map(month => `Tháng ${month}/2024`);

                    const orderCounts = allMonths.map(month => {
                        const monthData = data.find(item => item.month === month);
                        return monthData ? monthData.orderCount : 0;
                    });

                    const visitSalesData = {
                        labels: labels,
                        datasets: [{
                            label: 'Đơn hàng',
                            data: orderCounts,
                            backgroundColor: 'rgba(153, 102, 255, 0.2)',
                            borderColor: 'rgba(153, 102, 255, 1)',
                            borderWidth: 1,
                            fill: false
                        }]
                    };

                    const ctx = document.getElementById('visit-sale-chart').getContext('2d');
                    new Chart(ctx, {
                        type: 'line',
                        data: visitSalesData,
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'top',
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching data:', error);
                    alert('Có lỗi xảy ra khi tải dữ liệu.');
                }
            });

            // Fetch and display account data
            $.ajax({
                url: '@Url.Page("/Staff/StaticsStaff/StaffDashboard", new { handler = "CategoryData" })',
                type: 'GET',
                success: function (data) {
                    console.log("Data: ", data);
                    $('#totalCategory').text(data.totalCategory);
                    const accountPieChartElement = document.getElementById('categoryPieChart');
                    if (accountPieChartElement) {
                        const ctx = accountPieChartElement.getContext('2d');
                        new Chart(ctx, {
                            type: 'pie',
                            data: {
                                labels: ['Nhẫn', 'Vòng tay', 'Dây chuyền', 'Bông tai'],
                                datasets: [{
                                    data: [data.totalRing, data.totalBracelet, data.totalNecklace, data.totalEarring],
                                    backgroundColor: ['#66ccff', '#00cc7a', '#ffff99', '#ff8533'],
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false
                            }
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching data:', error);
                    alert('Có lỗi xảy ra khi tải dữ liệu.');
                }
            });
        });
    </script>

}
