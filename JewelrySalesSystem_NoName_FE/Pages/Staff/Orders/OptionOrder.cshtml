@page
@model JewelrySalesSystem_NoName_FE.Pages.Staff.Orders.OptionOrderModel
@{
}
@Html.AntiForgeryToken()
<body>
    <div class="main-panel">
        <div class="content-wrapper">
            <div class="page-header">
                <h3 class="page-title"> Tạo đơn hàng - Bước 2 (Tùy chọn) </h3>
            </div>
            <div class="row" style="height: 100%;">
                <!-- Left side: Product list -->
                <div class="col-md-7 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Trang sức</h4>
                            <p><em>Chỉ gia công kim cương và giá gia công là cố định. Nếu khách hàng không gia công có thể bỏ qua mục này</em></p>
                            <div class="container">
                                <table class="table table-bordered">
                                    <tbody id="productTableBody">
                                        <!-- Các sản phẩm sẽ được thêm vào đây -->
                                        @foreach (var order in Model.orderDetailProccesses)
                                        {
                                            <div class="form-group row">
                                                <div class="col-md-4">
                                                    <label class="control-label">Mã sản phẩm</label>
                                                    <input type="text" class="form-control" value="@order.ProductName" readonly />
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="control-label">Số lượng</label>
                                                    <input type="text" class="form-control" value="@order.Quantity" readonly />
                                                </div>
                                                <div class="col-md-3">
                                                    <label class="control-label">Giá thi công</label>
                                                    <input type="hidden" id="originalProcessPrice" value="@order.ProcessPrice">
                                                    @{
                                                        double processPrice = order.ProcessPrice;
                                                        var formattedProcessPrice = processPrice != 0 ? string.Format(new System.Globalization.CultureInfo(""), "{0:N0}", processPrice) : "";
                                                    }
                                                    <input type="text" id="formattedProcessPrice" class="form-control" value="@formattedProcessPrice" readonly />

                                                </div>
                                                <div class="col-md-3">
                                                    <label class="control-label" for="process-price">Gia công</label>
                                                    <div class="form-check">
                                                        <input type="checkbox" id="process-price" value="@order.ProcessPrice" class="form-check-input process-checkbox">
                                                        <label class="form-check-label" for="process-price"></label>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Right side: Customer and Order details -->
                <div class="col-md-5 grid-margin stretch-card" style="display: flex; flex-direction: column;">
                    <div class="card" style="flex-grow: 1;">
                        <div class="card-body">
                            <h4 class="card-title">Thông tin thành viên</h4>
                            @* Hiển thị lỗi *@
                            <div id="message-container"></div>
                            <div class="container">
                                <div class="row">
                                    <!-- Cột bên trái -->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Số điện thoại</label>
                                            <input type="text" id="customerPhone" name="phone" class="form-control" placeholder="Nhập số điện thoại" value="@Model.member.Phone" readonly>
                                        </div>
                                        <div class="form-group">
                                            <label>Tên khách hàng</label>
                                            <input type="text" id="customerName" name="fullName" class="form-control" placeholder="Nhập tên khách hàng" value="@Model.member.Name" readonly>
                                        </div>
                                    </div>
                                    <!-- Cột bên phải -->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Mức độ</label>
                                            @if (@Model.member.Type == "NewMember")
                                            {
                                                <input type="text" class="form-control" value="Thành viên mới" readonly style="background-color: green; color: white;">
                                                <input type="text" id="level" name="level" class="form-control" value="@Model.member.Type" readonly hidden>
                                            }
                                            else if (Model.member.Type == "Bronze")
                                            {
                                                <input type="text" class="form-control" value="Thành viên đồng" readonly style="background-color: 	rgb(96, 64, 32); color: white;">
                                                <input type="text" id="level" name="level" class="form-control" value="@Model.member.Type" readonly hidden>
                                            }
                                            else if (Model.member.Type == "Silve")
                                            {
                                                <input type="text" class="form-control" value="Thành viên bạc" readonly style="background-color: 	rgb(128, 128, 128); color: white;">
                                                <input type="text" id="level" name="level" class="form-control" value="@Model.member.Type" readonly hidden>
                                            }
                                            else
                                            {
                                                <input type="text" class="form-control" value="Thành viên vàng" readonly style="background-color: 	rgb(255, 255, 0); color: white;">
                                                <input type="text" id="level" name="level" class="form-control" value="@Model.member.Type" readonly hidden>
                                            }
                                        </div>
                                        <div class="form-group">
                                            <label>Tích lũy</label>
                                            <input type="hidden" id="originalUserMoney" value="@Model.member.UserMoney">
                                            <input type="text" id="usedMoney" name="usedMoney" class="form-control" readonly>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="container">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <labl>Chiết khấu đề xuất(%)</labl>
                                            <input type="text" id="percentDiscount" name="percentDiscount" class="form-control"
                                                   value="@(Model.member.PercentDiscount * 100)">
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <labl>Ghi chú</labl>
                                            <textarea type="textarea" id="description" name="description" class="form-control"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-md-12 row g-0">
                                        <div class="col-md-6 text-left" style="padding-right: 5px;">
                                            <button type="button" class="btn custom-button" id="requestDiscountBtn"
                                                    data-order-id="@Model.OrderProccess.OrderId"
                                                    data-manager-id="00000000-0000-0000-0000-000000000000" style="white-space: nowrap;">
                                                Yêu cầu chiết khấu
                                            </button>
                                        </div>
                                        <div class="col-md-6 text-right" style="padding-left: 50px;">
                                            <button type="button" class="btn btn-gradient-secondary" data-toggle="modal" data-target="#discountModal"
                                                    data-id="@Model.OrderProccess.OrderId">
                                                Phản hồi
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-group"></div>
                                    <div class="col-md-12">
                                        <!-- Customer Information -->
                                        <input type="hidden" id="orderId" value="@Model.OrderProccess.OrderId">
                                        <input type="hidden" id="managerId" value="00000000-0000-0000-0000-000000000000">
                                        <!-- Customer Information -->
                                        <h4 class="card-title">
                                            Tổng tiền (tạm tính): <span id="totalPrice" data-value="@Model.OrderProccess.TotalPrice">Đ</span>
                                        </h4>
                                        <h4 class="card-title">Chiết khấu giảm: <span id="totalDiscount">0</span></h4>
                                        <h4 class="card-title">Giá thi công: <span id="totalProccess">0</span></h4>
                                        <h4 class="card-title">Tổng tiền cần thanh toán: <span id="totalPayable">0</span></h4>
                                        <div class="form-group">
                                            <h4 for="paymentMethod">Phương thức thanh toán</h4>
                                            <div class="select-wrapper">
                                                <select class="form-control" id="paymentMethod" style="height: 2.5rem;">
                                                    <option value="" disabled selected>Chọn phương thức thanh toán</option>
                                                    <option value="transfer">Chuyển khoản</option>
                                                    <option value="cash">Thanh toán bằng tiền mặt</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="container">
                                            <div class="row">
                                                <input type="hidden" id="requestVerificationToken" value="">
                                                <button id="createOrderBtn" class="btn btn-success" style="white-space: nowrap;">Hoàn thành</button>
                                                <div class="form-group"></div>
                                                @*                                                 <button id="cancelButton" class="btn btn-gradient-secondary">Hủy</button> *@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        @*  Modal Discount Reply *@
        <div class="modal fade" id="discountModal" tabindex="-1" role="dialog" aria-labelledby="discountModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="discountModalLabel">Thông tin chi tiết Discount</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="discountContent">
                            <!-- Dynamic content will be inserted here -->
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    </div>
                </div>
            </div>
        </div>


        <!-- Modal Popup Discount Exit-->
        <div class="modal fade" id="exitDiscountModal" tabindex="-1" aria-labelledby="exitDiscountModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exitDiscountModalLabel">Thông báo</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center">
                        <h3>Đơn hàng này đã có triết khấu</h3>
                    </div>
                    <div class="modal-footer">
                        @* <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button> *@
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="successOrderModal" tabindex="-1" aria-labelledby="successOrderModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="successOrderModalLabel">Thông báo</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center">
                        <h3>Đơn hàng đã được tạo</h3>
                    </div>
                    <div class="modal-footer">
                        @* <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button> *@
                    </div>
                </div>
            </div>
        </div>

</body>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
    <script>

        document.addEventListener("DOMContentLoaded", function () {
            //Format: TotalPrice
            var totalPriceElement = document.getElementById("totalPrice");
            var totalPrice = totalPriceElement.getAttribute("data-value");
            totalPrice = Number(totalPrice).toLocaleString();
            totalPriceElement.textContent = totalPrice + ' Đ';
            //Format: UserMoney
            var originalUserMoney = document.getElementById("originalUserMoney").value;
            var formattedUserMoney = parseFloat(originalUserMoney).toLocaleString();
            document.getElementById("usedMoney").value = formattedUserMoney;
            //Format: ProccessPrice
            var originalProcessPrice = document.getElementById("originalProcessPrice").value;
            var formattedProcessPrice = parseFloat(originalProcessPrice).toLocaleString();
            document.getElementById("formattedProcessPrice").value = formattedProcessPrice;
        });
        //Create discount to send Manager
        $(document).ready(function () {
            var totalProccess = 0;
            var discountIdAccepted = null;
            const token = $('input[name="__RequestVerificationToken"]').val();

            function updateTotalPayable() {
                var totalPriceStr = $('#totalPrice').attr('value');
                var totalPrice = parseFloat(totalPriceStr.replace(/[^0-9.-]+/g, ""));
                if (isNaN(totalPrice)) {
                    console.error("Invalid total price:", totalPriceStr);
                    totalPrice = 0;
                }

                var totalDiscountStr = $('#totalDiscount').text();
                var totalDiscount = parseFloat(totalDiscountStr.replace(/[^0-9.-]+/g, ""));
                if (isNaN(totalDiscount)) {
                    console.error("Invalid total discount:", totalDiscountStr);
                    totalDiscount = 0;
                }

                var totalPayable = totalPrice - totalDiscount + totalProccess;
                if (isNaN(totalPayable)) {
                    console.error("Invalid total payable:", totalPrice, totalDiscount, totalProccess);
                    totalPayable = 0;
                }

                $('#totalPayable').text(totalPayable.toLocaleString('vi-VN') + 'Đ');
            }

            // Update the total process price when checkboxes are toggled
            $('.process-checkbox').change(function () {
                var processPriceStr = $(this).val();
                console.log("Giá thi công:", processPriceStr);
                var processPrice = parseFloat(processPriceStr.replace(/[^0-9.-]+/g, ""));
                if (isNaN(processPrice)) {
                    console.error("Invalid process price:", processPriceStr);
                    processPrice = 0;
                }

                if (this.checked) {
                    totalProccess += processPrice;
                } else {
                    totalProccess -= processPrice;
                }

                $('#totalProccess').text(totalProccess.toLocaleString() + 'Đ');
                updateTotalPayable();
            });

            function updateTotalPayable() {
                var totalPriceElem = $('#totalPrice');
                var totalDiscountElem = $('#totalDiscount');
                var totalProccessElem = $('#totalProccess');

                // Check if all required elements exist
                if (!totalPriceElem.length || !totalDiscountElem.length || !totalProccessElem.length) {
                    console.error("One or more elements not found:", totalPriceElem, totalDiscountElem, totalProccessElem);
                    return;
                }

                // Get text content from elements
                var totalPriceStr = totalPriceElem.text().trim();
                var totalDiscountStr = totalDiscountElem.text().trim();
                var totalProccessStr = totalProccessElem.text().trim();

                // Convert strings to numbers
                var totalPrice = parseFloat(totalPriceStr.replace(/[^0-9.-]+/g, ""));
                var totalDiscount = parseFloat(totalDiscountStr.replace(/[^0-9.-]+/g, ""));
                var totalProccess = parseFloat(totalProccessStr.replace(/[^0-9.-]+/g, ""));

                // Check if conversion to numbers succeeded
                if (isNaN(totalPrice) || isNaN(totalDiscount) || isNaN(totalProccess)) {
                    console.error("Failed to parse numeric values.");
                    return;
                }

                // Calculate total payable
                var totalPayable = totalPrice - totalDiscount + totalProccess;

                // Update the totalPayable element
                $('#totalPayable').text(totalPayable.toLocaleString() + 'Đ');
            }



            $('#requestDiscountBtn').click(function () {
                const orderId = $('#orderId').val();
                const managerId = $('#managerId').val();
                const percentDiscount = $('#percentDiscount').val();
                const description = $('#description').val();
                // const token = $('input[name="__RequestVerificationToken"]').val();

                const discountRequest = {
                    OrderId: orderId,
                    ManagerId: managerId || "00000000-0000-0000-0000-000000000000",
                    PercentDiscount: parseInt(percentDiscount, 10),
                    Description: description,
                    ConditionDiscount: 0
                };

                console.log("Discount request: ", discountRequest);
                console.log("Token create: ", token);
                $.ajax({
                    url: '/Staff/Orders/OptionOrder?handler=SendRequirement',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(discountRequest),
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function (response) {
                        if (response.redirectUrl) {
                            window.location.href = response.redirectUrl;
                        } else {
                            $('#exitDiscountModal').modal('show');
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("Lỗi")

                    }
                });
            });

            $('#discountModal').on('show.bs.modal', function (event) {
                let button = $(event.relatedTarget);
                let discountId = button.data('id');
                loadDiscountData(discountId);
            });

            //Receive discount from Manager
            function loadDiscountData(id) {
                $.ajax({
                    url: 'https://localhost:44318/api/v1/discount/accepted',
                    type: 'GET',
                    data: { id: id },
                    success: function (data) {
                        console.log("Load tới  loadDiscountData ");
                        if (typeof data === 'string') {
                            try {
                                data = JSON.parse(data);
                            } catch (e) {
                                console.error('Error parsing data:', e);
                                $('#discountContent').html('<p>Error: Unable to parse data from server</p>');
                                return;
                            }
                        } else if (data.message === 'Chưa có phản hồi từ quản lí') {
                            $('#discountContent').html('<p><strong>Chưa có phản hồi từ quản lí</strong></p>');
                            return;
                        }

                        // Check if the data represents an empty object
                        if (isEmptyObject(data)) {
                            $('#discountContent').html('<p><strong>Chưa có phản hồi từ quản lí</strong></p>');
                        } else {
                            discountIdAccepted = data.Id;
                            console.log('Data fields:', data, data.Id, data.Status, data.Note);
                            let statusMessage;
                            if (data.Status === 'Accepted') {
                                statusMessage = 'Phần trăm chiết khấu được chấp nhận';
                                // Calculate the discounts
                                let totalPrice = parseFloat('@Model.OrderProccess.TotalPrice');
                                let discountPercent = parseFloat(data.PercentDiscount) / 100;
                                let totalDiscount = totalPrice * discountPercent;
                                let totalPayable = totalPrice - totalDiscount + totalProccess;


                                $('#totalPayable').text(totalPayable.toLocaleString() + ' Đ');
                                $('#totalDiscount').text(totalDiscount.toLocaleString() + ' Đ');
                            } else if (data.Status === 'Rejected') {
                                statusMessage = 'Phần trăm chiết khấu không được chấp nhận';
                            } else {
                                statusMessage = data.Status;
                            }

                            // Hiển thị dữ liệu thực tế
                            let html = '<ul class="list-group">';
                            html += `<li class="list-group-item"><strong>ID:</strong> ${data.Id}</li>`;
                            html += `<li class="list-group-item"><strong>Trạng thái:</strong> ${statusMessage}</li>`;
                            html += `<li class="list-group-item"><strong>Phần trăm:</strong> ${data.PercentDiscount}</li>`;
                            if (data.Note) {
                                html += `<li class="list-group-item"><strong>Note:</strong> ${data.Note}</li>`;
                            } else {
                                html += `<li class="list-group-item"><strong>Note:</strong> Không có ghi chú</li>`;
                            }
                            html += '</ul>';
                            $('#discountContent').html(html);
                        }
                    },
                    error: function (error) {
                        console.error('Error loading discount data', error);
                        $('#discountContent').html('<p>Error loading data</p>');
                    }
                });
            }

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("https://localhost:44318/signalrServer")
                .build();
            const debouncedLoadDiscountData = debounce(loadDiscountData, 3000);

            connection.on("DiscountAccpetNotification", function () {
                console.log('Discount status changed');
                debouncedLoadDiscountData(orderId);
            });

            connection.start().then(function () {
                console.log('SignalR connected.');
            }).catch(function (err) {
                console.error('SignalR connection error:', err.toString());
            });

            function debounce(func, wait) {
                let timeout;
                return function (...args) {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func.apply(this, args), wait);
                };
            }

            function isEmptyObject(obj) {
                return Object.keys(obj).every(key => obj[key] === null || obj[key] === "" || obj[key] === "00000000-0000-0000-0000-000000000000");
            }

            $('#createOrderBtn').click(function () {
                console.log("Chạy nè!!!", $('#totalDiscount').text(), $('#totalPrice'), $('#totalProccess').text());
                var discountId = $('#totalDiscount').text().replace(/[^0-9.-]+/g, "") || null;
                var totalPrice = parseFloat($('#totalPrice').attr('data-value').replace(/[^0-9.-]+/g, ""));

                var materialProcessPrice = parseFloat($('#totalProccess').text().replace(/[^0-9.-]+/g, ""));
                var orderId = $('#orderId').val();
                console.log("Discount + total + proccess", discountId, totalPrice, materialProcessPrice);
                var orderDetails = {
                    DiscountId: discountIdAccepted,
                    TotalPrice: totalPrice,
                    MaterialProcessPrice: materialProcessPrice,
                    OrderId: orderId
                };
                console.log("Dữ liệu cập nhật order: ", orderDetails);
                // Gửi yêu cầu POST đến API
                $.ajax({
                    type: 'PUT',
                    url: '/Staff/Orders/OptionOrder?handler=CompleteOrder',
                    data: JSON.stringify(orderDetails),
                    contentType: 'application/json',
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function (response) {
                        $('#successOrderModal').modal('show');
                        window.location.href = response.redirectUrl;
                    },
                    error: function (error) {
                        alert('Error updating order: ' + error.responseText);
                    }
                });

            });
        });


    </script>
}

<style>
    .custom-button {
        background: rgb(23,131,240);
        background: linear-gradient(0deg, rgba(23,131,240,1) 10%, rgba(49,82,192,0.9960434857536765) 73%);
        border: none;
        color: white;
    }

        .custom-button:hover {
            background: linear-gradient(0deg, rgba(100,49,192,0.9960434857536765) 27%, rgba(23,131,240,1) 100%);
        }

    .form-check {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .form-check-input {
        margin-right: 0.5em;
    }

    .green-background {
        background-color: green;
        color: white !important;
        ;
    }
</style>
