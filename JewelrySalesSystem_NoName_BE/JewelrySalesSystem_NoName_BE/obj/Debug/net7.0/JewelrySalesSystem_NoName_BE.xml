<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JewelrySalesSystem_NoName_BE</name>
    </assembly>
    <members>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.AccountController.GetAllAccountsAsync">
            <summary>
            Get all accounts.
            </summary>
            <returns>List of accounts.</returns>
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.AccountController.GetAccountByIdAsync(System.Guid)">
            <summary>
            Get a account by its ID.
            </summary>
            <param name="id">The ID of the stall to retrieve.</param>
            <returns>The stall with the specified ID.</returns>
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.CategoryController.GetAllCategoriesAsync">
            <summary>
            Get all categories.
            </summary>
            <returns>List of categories.</returns> 
            GET : api/Category
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.CategoryController.GetCategoryByIdAsync(System.Guid)">
            <summary>
            Get a category by its ID.
            </summary>
            <param name="id">The ID of the category to retrieve.</param>
            <returns>The category with the specified ID.</returns>
            GET : api/Category
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.CategoryController.CreateCategoryAsync(JSS_BusinessObjects.Payload.Request.CategoryRequest)">
            <summary>
            Create a new category.
            </summary>
            <param name="category">The category to create.</param>
            <returns>The created category.</returns>
            POST : api/Category
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.CategoryController.UpdateCategoryAsync(System.Guid,JSS_BusinessObjects.Models.Category)">
            <summary>
            Update a category by its ID.
            </summary>
            <param name="id">The ID of the category to update.</param>
            <param name="category">The updated category data.</param>
            <returns>The updated category.</returns>
            POST : api/Category
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.CategoryController.DeleteCategoryAsync(System.Guid)">
            <summary>
            Delete a category by its ID.
            </summary>
            <param name="id">The ID of the category to delete.</param>
            <returns>A response indicating the result of the delete operation.</returns>
            POST : api/Category
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.MaterialController.GetAllMaterialsAsync">
            <summary>
            Get all materials.
            </summary>
            <returns>List of materials.</returns>
            GET : api/Material
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.MaterialController.GetMaterialByIdAsync(System.Guid)">
            <summary>
            Get a material by its ID.
            </summary>
            <param name="id">The ID of the material to retrieve.</param>
            <returns>The material with the specified ID.</returns>
            GET : api/Material
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.MaterialController.CreateMaterialAsync(JSS_BusinessObjects.Payload.Request.MaterialRequest)">
            <summary>
            Create a new material.
            </summary>
            <param name="material">The material to create.</param>
            <returns>The created material.</returns>
            POST : api/Material
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.MaterialController.UpdateMaterialAsync(System.Guid,JSS_BusinessObjects.Models.Material)">
            <summary>
            Update a material by its ID.
            </summary>
            <param name="id">The ID of the material to update.</param>
            <param name="material">The updated material data.</param>
            <returns>The updated material.</returns>
            POST : api/Material
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.MaterialController.DeleteMaterialAsync(System.Guid)">
            <summary>
            Delete a material by its ID.
            </summary>
            <param name="id">The ID of the material to delete.</param>
            <returns>A response indicating the result of the delete operation.</returns>
            POST : api/Material
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.StallController.GetAllStallsAsync">
            <summary>
            Get all stalls.
            </summary>
            <returns>List of stalls.</returns>
        </member>
        <member name="M:JewelrySalesSystem_NoName_BE.Controllers.StallController.GetStallByIdAsync(System.Guid)">
            <summary>
            Get a stall by its ID.
            </summary>
            <param name="id">The ID of the stall to retrieve.</param>
            <returns>The stall with the specified ID.</returns>
        </member>
        <member name="M:JewelrySalesSysmte_NoName_BE.Controllers.WarrantyController.GetWarranties(System.Int32,System.Int32)">
            <summary>
            List of warranty.
            </summary>
            <returns>List of warranty.</returns>
        </member>
        <member name="M:JewelrySalesSysmte_NoName_BE.Controllers.WarrantyController.GetWarrantytDetail(System.Guid)">
            <summary>
            Get detail of warranty.
            </summary>
            <returns>IWarranty detail</returns>
        </member>
        <member name="M:JewelrySalesSysmte_NoName_BE.Controllers.WarrantyController.CreateWarranty(JSS_BusinessObjects.Payload.Request.WarrantyRequest)">
            <summary>
            Create new warranty.
            </summary>
            <returns>Warraty item</returns>
        </member>
        <member name="M:JewelrySalesSysmte_NoName_BE.ExpressionExtensions.AndAlso``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates a lambda expression that represents a conditional AND operation
            </summary>
            <param name="left">An expression to set the left property of the binary expression</param>
            <param name="right">An expression to set the right property of the binary expression</param>
            <returns>A binary expression that has the node type property equal to AndAlso, 
            and the left and right properties set to the specified values</returns>
        </member>
        <member name="M:JewelrySalesSysmte_NoName_BE.ExpressionExtensions.OrElse``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates a lambda expression that represents a conditional OR operation
            </summary>
            <param name="left">An expression to set the left property of the binary expression</param>
            <param name="right">An expression to set the right property of the binary expression</param>
            <returns>A binary expression that has the node type property equal to OrElse, 
            and the left and right properties set to the specified values</returns>
        </member>
    </members>
</doc>
